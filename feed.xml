

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://githin.xyz/</id>
  <title>Githin's Dev Blog</title>
  <subtitle>Githin's Personal Blog for documenting self-hosting setups and whatnot.</subtitle>
  <updated>2022-03-21T18:17:09+00:00</updated>
  <author>
    <name>Githin Manesh</name>
    <uri>https://githin.xyz/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://githin.xyz/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en-US"
    href="https://githin.xyz/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> © 2022 Githin Manesh </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Enable Google Page Views</title>
    <link href="https://githin.xyz/posts/enable-google-pv/" rel="alternate" type="text/html" title="Enable Google Page Views" />
    <published>2021-01-03T23:32:00+00:00</published>
  
    <updated>2021-04-06T06:05:55+00:00</updated>
  
    <id>https://githin.xyz/posts/enable-google-pv/</id>
  
    <content type="html" xml:base="https://githin.xyz/posts/enable-google-pv/">
    
    <p>This post is to enable Page Views on the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><strong>Chirpy</strong></a> theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the <code class="language-plaintext highlighter-rouge">google_analytics.pv.*</code> empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.</p>

<h2 id="set-up-google-analytics">Set up Google Analytics</h2>

<h3 id="create-ga-account-and-property">Create GA account and property</h3>

<p>First, you need to setup your account on Google analytics. While your create your account, you must create your first <strong>Property</strong> as well.</p>

<ol>
  <li>Head to <a href="https://analytics.google.com/">https://analytics.google.com/</a> and click on <strong>Start Measuring</strong></li>
  <li>Enter your desired <em>Account Name</em> and choose the desired checkboxes</li>
  <li>Enter your desired <em>Property Name</em>. This is the name of the tracker project that appears on your Google Analytics dashboard</li>
  <li>Enter the required information <em>About your business</em></li>
  <li>Hit <em>Create</em> and accept any license popup to setup your Google Analytics account and create your property</li>
</ol>

<h3 id="create-data-stream">Create Data Stream</h3>

<p>With your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to creating your first <strong>Data Stream</strong>. If not, follow these steps:</p>

<ol>
  <li>Go to <strong>Admin</strong> on the left column</li>
  <li>Select the desired property from the drop down on the second column</li>
  <li>Click on <strong>Data Streams</strong></li>
  <li>Add a stream and click on <strong>Web</strong></li>
  <li>Enter your blog’s URL</li>
</ol>

<p>It should look like this:</p>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20210103/01-google-analytics-data-stream.png" alt="google-analytics-data-stream" /></p>

<p>Now, click on the new data stream and grab the <strong>Measurement ID</strong>. It should look something like <code class="language-plaintext highlighter-rouge">G-V6XXXXXXXX</code>. Copy this to your <code class="language-plaintext highlighter-rouge">_config.yml</code> file</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="na">google_analytics</span><span class="pi">:</span>
  <span class="na">id</span><span class="pi">:</span> <span class="s1">'</span><span class="s">G-V6XXXXXXX'</span>   <span class="c1"># fill in your Google Analytics ID</span>
  <span class="c1"># Google Analytics pageviews report settings</span>
  <span class="na">pv</span><span class="pi">:</span>
    <span class="na">proxy_endpoint</span><span class="pi">:</span>   <span class="c1"># fill in the Google Analytics superProxy endpoint of Google App Engine</span>
    <span class="na">cache_path</span><span class="pi">:</span>       <span class="c1"># the local PV cache data, friendly to visitors from GFW region</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>When you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pickup your changes. You should now be able to monitor your traffic in realtime.</p>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20210103/02-google-analytics-realtime.png" alt="google-analytics-realtime" /></p>

<h2 id="setup-page-views">Setup Page Views</h2>

<p>There is a detailed <a href="https://developers.google.com/analytics/solutions/google-analytics-super-proxy">tutorial</a> available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use Git bash terminal to run Unix-like commands.</p>

<h3 id="setup-google-app-engine">Setup Google App Engine</h3>

<ol>
  <li>
    <p>Visit <a href="https://console.cloud.google.com/appengine">https://console.cloud.google.com/appengine</a></p>
  </li>
  <li>
    <p>Click on <strong>Create Application</strong></p>
  </li>
  <li>
    <p>Click on <strong>Create Project</strong></p>
  </li>
  <li>
    <p>Enter the name and choose the data center close to you</p>
  </li>
  <li>
    <p>Select <strong>Python</strong> language and <strong>Standard</strong> environment</p>
  </li>
  <li>
    <p>Enable billing account. Yeah, you have to link your credit card. But, you won’t be billed unless you exceed your free quota. For a simple blog, free quota is more than sufficient.</p>
  </li>
  <li>
    <p>Go to your App Engine dashboard on your browser and select <strong>API &amp;amp; Services</strong> from the left navigation menu</p>
  </li>
  <li>
    <p>Click on <strong>Enable APIs and Services</strong> button on the top</p>
  </li>
  <li>
    <p>Enable the following APIs: <em>Google Analytics API</em></p>
  </li>
  <li>
    <p>On the left, Click on <em>OAuth Consent Screen</em> and accept <strong>Configure Consent Screen</strong>. Select <strong>External</strong> since your blog is probably hosted for the public. Click on <strong>Publish</strong> under <em>Publishing Status</em></p>
  </li>
  <li>
    <p>Click on <strong>Credentials</strong> on the left and create a new <strong>OAuth Client IDs</strong> credential. Make sure to add a entry under <code class="language-plaintext highlighter-rouge">Authorized redirect URIs</code> that matches: <code class="language-plaintext highlighter-rouge">https://&amp;lt;project-id&amp;gt;.&amp;lt;region&amp;gt;.r.appspot.com/admin/auth</code></p>
  </li>
  <li>
    <p>Note down the <strong>Your Client ID</strong> and <strong>Your Client Secret</strong>. You’ll need this in the next section.</p>
  </li>
  <li>
    <p>Download and install the cloud SDK for your platform: <a href="https://cloud.google.com/sdk/docs/quickstart">https://cloud.google.com/sdk/docs/quickstart</a></p>
  </li>
  <li>
    <p>Run the following commands:</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="gp">[root@bc96abf71ef8 /]#</span><span class="w"> </span>gcloud init
<span class="go">
~snip~

Go to the following link in your browser:

    https://accounts.google.com/o/oauth2/auth?response_type=code&amp;amp;client_id=XYZ.apps.googleusercontent.com&amp;amp;redirect_uri=ABCDEFG

</span><span class="gp">Enter verification code: &amp;lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&amp;gt;</span><span class="w">
</span><span class="go">
You are logged in as: [blah_blah@gmail.com].

Pick cloud project to use:
[1] chirpy-test-300716
[2] Create a new project
Please enter numeric choice or text value (must exactly match list
item): 1


</span><span class="gp">[root@bc96abf71ef8 /]#</span><span class="w"> </span>gcloud info
<span class="gp">#</span><span class="w"> </span>Your selected project info should be displayed here
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ol>

<h3 id="setup-google-analytics-superproxy">Setup Google Analytics superProxy</h3>

<ol>
  <li>
    <p>Clone the <strong>Google Analytics superProxy</strong> project on Github: <a href="https://github.com/googleanalytics/google-analytics-super-proxy">https://github.com/googleanalytics/google-analytics-super-proxy</a> to your local.</p>
  </li>
  <li>Remove the first 2 lines in the <a href="https://github.com/googleanalytics/google-analytics-super-proxy/blob/master/src/app.yaml#L1-L2"><code class="language-plaintext highlighter-rouge">src/app.yaml</code></a> file:
    <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="gd">- application: your-project-id
- version: 1
</span></pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>In <code class="language-plaintext highlighter-rouge">src/config.py</code>, add the <code class="language-plaintext highlighter-rouge">OAUTH_CLIENT_ID</code> and <code class="language-plaintext highlighter-rouge">OAUTH_CLIENT_SECRET</code> that you gathered from you App Engine Dashboard.</p>
  </li>
  <li>
    <p>Enter any random key for <code class="language-plaintext highlighter-rouge">XSRF_KEY</code>, your <code class="language-plaintext highlighter-rouge">config.py</code> should look similar to this</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre> <span class="c1">#!/usr/bin/python2.7
</span>
 <span class="n">__author__</span> <span class="o">=</span> <span class="s">'pete.frisella@gmail.com (Pete Frisella)'</span>

 <span class="c1"># OAuth 2.0 Client Settings
</span> <span class="n">AUTH_CONFIG</span> <span class="o">=</span> <span class="p">{</span>
   <span class="s">'OAUTH_CLIENT_ID'</span><span class="p">:</span> <span class="s">'YOUR_CLIENT_ID'</span><span class="p">,</span>
   <span class="s">'OAUTH_CLIENT_SECRET'</span><span class="p">:</span> <span class="s">'YOUR_CLIENT_SECRET'</span><span class="p">,</span>
   <span class="s">'OAUTH_REDIRECT_URI'</span><span class="p">:</span> <span class="s">'%s%s'</span> <span class="o">%</span> <span class="p">(</span>
     <span class="s">'https://chirpy-test-XXXXXX.ue.r.appspot.com'</span><span class="p">,</span>
     <span class="s">'/admin/auth'</span>
   <span class="p">)</span>
 <span class="p">}</span>

 <span class="c1"># XSRF Settings
</span> <span class="n">XSRF_KEY</span> <span class="o">=</span> <span class="s">'OnceUponATimeThereLivedALegend'</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p><strong>Tip:</strong> You can configure a custom domain instead of <code class="language-plaintext highlighter-rouge">https://PROJECT_ID.REGION_ID.r.appspot.com</code>. But, for the sake of keeping it simple, we will be using the Google provided default URL.</p>
  </li>
  <li>
    <p>From inside the src/ directory, deploy the app</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="gp"> [root@bc96abf71ef8 src]#</span><span class="w"> </span>gcloud app deploy
<span class="go"> Services to deploy:

 descriptor:      [/tmp/google-analytics-super-proxy/src/app.yaml]
 source:          [/tmp/google-analytics-super-proxy/src]
 target project:  [chirpy-test-XXXX]
 target service:  [default]
 target version:  [VESRION_NUM]
 target url:      [https://chirpy-test-XXXX.ue.r.appspot.com]


 Do you want to continue (Y/n)? Y

 Beginning deployment of service [default]...
 ╔════════════════════════════════════════════════════════════╗
 ╠═ Uploading 1 file to Google Cloud Storage                 ═╣
 ╚════════════════════════════════════════════════════════════╝
 File upload done.
 Updating service [default]...done.
 Setting traffic split for service [default]...done.
 Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]

 You can stream logs from the command line by running:
</span><span class="gp"> $</span><span class="w"> </span>gcloud app logs <span class="nb">tail</span> <span class="nt">-s</span> default
<span class="go">
 To view your application in the web browser run:
</span><span class="gp"> $</span><span class="w"> </span>gcloud app browse
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>Visit the deployed service. Add a <code class="language-plaintext highlighter-rouge">/admin</code> to the end of the URL.</p>
  </li>
  <li>
    <p>Click on <strong>Authorize Users</strong> and make sure to add yourself as a managed user.</p>
  </li>
  <li>If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix.</li>
</ol>

<p>If everything went good, you’ll get this screen:</p>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20210103/03-superProxy-deployed.png" alt="superProxy-deployed" /></p>

<h3 id="create-google-analytics-query">Create Google Analytics Query</h3>

<p>Head to <code class="language-plaintext highlighter-rouge">https://PROJECT_ID.REGION_ID.r.appspot.com/admin</code> and create a query after verifying the account. <strong>GA Core Reporting API</strong> query request can be created in <a href="https://ga-dev-tools.appspot.com/query-explorer/">Query Explorer</a>.</p>

<p>The query parameters are as follows:</p>

<ul>
  <li><strong>start-date</strong>: fill in the first day of blog posting</li>
  <li><strong>end-date</strong>: fill in <code class="language-plaintext highlighter-rouge">today</code> (this is a parameter supported by GA Report, which means that it will always end according to the current query date)</li>
  <li><strong>metrics</strong>: select <code class="language-plaintext highlighter-rouge">ga:pageviews</code></li>
  <li><strong>dimensions</strong>: select <code class="language-plaintext highlighter-rouge">ga:pagePath</code></li>
</ul>

<p>In order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules <sup id="fnref:ga-filters" role="doc-noteref"><a href="#fn:ga-filters" class="footnote" rel="footnote">1</a></sup>:</p>

<ul>
  <li>
    <p><strong>filters</strong>: fill in <code class="language-plaintext highlighter-rouge">ga:pagePath=~^/posts/.*/$;ga:pagePath!@=</code>.</p>

    <p>Among them, <code class="language-plaintext highlighter-rouge">;</code> means using <em>logical AND</em> to concatenate two rules.</p>

    <p>If the <code class="language-plaintext highlighter-rouge">site.baseurl</code> is specified, change the first filtering rule to <code class="language-plaintext highlighter-rouge">ga:pagePath=~^/BASE_URL/posts/.*/$</code>, where <code class="language-plaintext highlighter-rouge">BASE_URL</code> is the value of <code class="language-plaintext highlighter-rouge">site.baseurl</code>.</p>
  </li>
</ul>

<p>After <kbd>Run Query</kbd>, copy the generated contents of <strong>API Query URI</strong> at the bottom of the page, and fill in the <strong>Encoded URI for the query</strong> of SuperProxy on GAE.</p>

<p>After the query is saved on GAE, a <strong>Public Endpoint</strong> (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click <kbd>Enable Endpoint</kbd> in <strong>Public Request Endpoint</strong> to make the query effective, and click <kbd>Start Scheduling</kbd> in <strong>Scheduling</strong> to start the scheduled task.</p>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20210103/04-superproxy-query.png" alt="superproxy-query" /></p>

<h2 id="configure-chirpy-to-display-page-view">Configure Chirpy to Display Page View</h2>

<p>Once all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.</p>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20210103/05-superproxy-dashboard.png" alt="superproxy-dashboard" /></p>

<p>Update the <code class="language-plaintext highlighter-rouge">_config.yml</code> file of <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><strong>Chirpy</strong></a> project with the values from your dashboard, to look similar to the following:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="na">google_analytics</span><span class="pi">:</span>
  <span class="na">id</span><span class="pi">:</span> <span class="s1">'</span><span class="s">G-V6XXXXXXX'</span>   <span class="c1"># fill in your Google Analytics ID</span>
  <span class="na">pv</span><span class="pi">:</span>
    <span class="na">proxy_endpoint</span><span class="pi">:</span> <span class="s1">'</span><span class="s">https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&amp;lt;ID</span><span class="nv"> </span><span class="s">FROM</span><span class="nv"> </span><span class="s">SUPER</span><span class="nv"> </span><span class="s">PROXY&amp;gt;'</span>
    <span class="na">cache_path</span><span class="pi">:</span>       <span class="c1"># the local PV cache data, friendly to visitors from GFW region</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now, you should see the Page View enabled on your blog.</p>

<h2 id="reference">Reference</h2>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:ga-filters" role="doc-endnote">
      <p><a href="https://developers.google.com/analytics/devguides/reporting/core/v3/reference#filters">Google Analytics Core Reporting API: Filters</a> <a href="#fnref:ga-filters" class="reversefootnote" role="doc-backlink">&amp;#8617;</a></p>
    </li>
  </ol>
</div>

    </content>
    <author>
      <name>Dinesh Prasanth Moluguwan Krishnamoorthy</name>
    </author>

  
    
    <category term="Blogging" />
    
    <category term="Tutorial" />
    
  

  
    <summary>
      





      This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.

Set up Google Analytics

Create GA account a...
    </summary>
  

  </entry>

  
  <entry>
    <title>Customize the Favicon</title>
    <link href="https://githin.xyz/posts/customize-the-favicon/" rel="alternate" type="text/html" title="Customize the Favicon" />
    <published>2019-08-10T16:34:00+00:00</published>
  
    <updated>2022-03-21T18:12:30+00:00</updated>
  
    <id>https://githin.xyz/posts/customize-the-favicon/</id>
  
    <content type="html" xml:base="https://githin.xyz/posts/customize-the-favicon/">
    
    <p>The <a href="https://www.favicon-generator.org/about/">favicons</a> of <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><strong>Chirpy</strong></a> are placed in the directory <code class="language-plaintext highlighter-rouge">assets/img/favicons/</code>. You may need to replace them with your own. The following sections will guide you how to create and replace the default favicons.</p>

<h2 id="generate-the-favicon">Generate the favicon</h2>

<p>Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool <a href="https://realfavicongenerator.net/"><strong>Real Favicon Generator</strong></a> and click button <kbd>Select your Favicon image</kbd> to upload your image file.</p>

<p>In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button <kbd>Generate your Favicons and HTML code</kbd> to generate the favicon.</p>

<h2 id="download--replace">Download &amp;amp; Replace</h2>

<p>Download the generated package, unzip and delete the following two from the extracted files:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">browserconfig.xml</code></li>
  <li><code class="language-plaintext highlighter-rouge">site.webmanifest</code></li>
</ul>

<p>Now, copy the remaining image files (<code class="language-plaintext highlighter-rouge">PNG</code> and <code class="language-plaintext highlighter-rouge">ICO</code>) to cover the original files in the folder <code class="language-plaintext highlighter-rouge">assets/img/favicons/</code> of your Jekyll site.</p>

<p>The following table will helps you understand the changes to the favicon files:</p>

<table>
  <thead>
    <tr>
      <th>File(s)</th>
      <th style="text-align: center">From Online Tool</th>
      <th style="text-align: center">From Chirpy</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">*.PNG</code></td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">*.ICO</code></td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">browserconfig.xml</code></td>
      <td style="text-align: center">✗</td>
      <td style="text-align: center">✓</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">site.webmanifest</code></td>
      <td style="text-align: center">✗</td>
      <td style="text-align: center">✓</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Note: ✓ means keep, ✗ means delete.</p>
</blockquote>

<p>The next time you build the site, the favicon will be replaced with a customized edition.</p>

<hr />

<p><strong>Update:</strong> Got a suggestion from a reader of the blog to use <a href="https://www.websiteplanet.com/webtools/favicon-generator/">Website Planet Favicon Generator</a> for source images having file size greater than 2MB. This tool allows to create favicons from pictures that are up to 5 MB from either JPG, PNG or GIF.</p>

<hr />

    </content>
    <author>
      <name>Githin Manesh</name>
    </author>

  
    
    <category term="Blogging" />
    
    <category term="Tutorial" />
    
  

  
    <summary>
      





      The favicons of Chirpy are placed in the directory assets/img/favicons/. You may need to replace them with your own. The following sections will guide you how to create and replace the default favicons.

Generate the favicon

Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click button Select your Favicon image ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Getting Started</title>
    <link href="https://githin.xyz/posts/getting-started/" rel="alternate" type="text/html" title="Getting Started" />
    <published>2019-08-09T12:55:00+00:00</published>
  
    <updated>2021-04-19T13:01:36+00:00</updated>
  
    <id>https://githin.xyz/posts/getting-started/</id>
  
    <content type="html" xml:base="https://githin.xyz/posts/getting-started/">
    
    <h2 id="prerequisites">Prerequisites</h2>

<p>Follow the <a href="https://jekyllrb.com/docs/installation/">Jekyll Docs</a> to complete the installation of <code class="language-plaintext highlighter-rouge">Ruby</code>, <code class="language-plaintext highlighter-rouge">RubyGems</code>, <code class="language-plaintext highlighter-rouge">Jekyll</code> and <code class="language-plaintext highlighter-rouge">Bundler</code>.</p>

<h2 id="installation">Installation</h2>

<p>There are two ways to get the theme:</p>

<ul>
  <li><strong>Install from RubyGems</strong> - Easy to update, isolate irrelevant project files so you can focus on writing.</li>
  <li><strong>Fork on GitHub</strong> - Convenient for custom development, but difficult to update, only suitable for web developers.</li>
</ul>

<h3 id="installing-the-theme-gem">Installing the Theme Gem</h3>

<p>Add this line to your Jekyll site’s <code class="language-plaintext highlighter-rouge">Gemfile</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">gem</span> <span class="s2">"jekyll-theme-chirpy"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>And add this line to your Jekyll site’s <code class="language-plaintext highlighter-rouge">_config.yml</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="na">theme</span><span class="pi">:</span> <span class="s">jekyll-theme-chirpy</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>And then execute:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Finally, copy the required files from the theme’s gem (for detailed files, see <a href="https://github.com/cotes2020/chirpy-starter">starter project</a>) to your Jekyll site.</p>

<blockquote>
  <p><strong>Hint</strong>: To locate the installed theme’s gem, execute:</p>

  <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle info <span class="nt">--path</span> jekyll-theme-chirpy
</pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<p>Or you can <a href="https://github.com/cotes2020/chirpy-starter/generate"><strong>use the starter template</strong></a> to create a Jekyll site to save time copying files from the theme’s gem. We have prepared everything for you there!</p>

<h3 id="fork-on-github">Fork on GitHub</h3>

<p><a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork">Fork <strong>Chirpy</strong></a> on GitHub and then clone your fork to local. (Please note that the default branch code is in development.  If you want the blog to be stable, please switch to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/tags">latest tag</a> and start writing.)</p>

<p>Install gem dependencies by:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle
</pre></td></tr></tbody></table></code></pre></div></div>

<p>And then execute:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bash tools/init.sh
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><strong>Note</strong>: If you don’t plan to deploy your site on GitHub Pages, append parameter option <code class="language-plaintext highlighter-rouge">--no-gh</code> at the end of the above command.</p>
</blockquote>

<p>What it does is:</p>

<ol>
  <li>Remove some files or directories from your repository:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.travis.yml</code></li>
      <li>files under <code class="language-plaintext highlighter-rouge">_posts</code></li>
      <li>folder <code class="language-plaintext highlighter-rouge">docs</code></li>
    </ul>
  </li>
  <li>
    <p>If you use the <code class="language-plaintext highlighter-rouge">--no-gh</code> option, the directory <code class="language-plaintext highlighter-rouge">.github</code> will be deleted. Otherwise, setup the GitHub Action workflow by removing the extension <code class="language-plaintext highlighter-rouge">.hook</code> of <code class="language-plaintext highlighter-rouge">.github/workflows/pages-deploy.yml.hook</code>, and then remove the other files and directories in the folder <code class="language-plaintext highlighter-rouge">.github</code>.</p>
  </li>
  <li>Automatically create a commit to save the changes.</li>
</ol>

<h2 id="usage">Usage</h2>

<h3 id="configuration">Configuration</h3>

<p>Update the variables of <code class="language-plaintext highlighter-rouge">_config.yml</code> as needed. Some of them are typical options:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">url</code></li>
  <li><code class="language-plaintext highlighter-rouge">avatar</code></li>
  <li><code class="language-plaintext highlighter-rouge">timezone</code></li>
  <li><code class="language-plaintext highlighter-rouge">lang</code></li>
</ul>

<h3 id="running-local-server">Running Local Server</h3>

<p>You may want to preview the site contents before publishing, so just run it by:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle <span class="nb">exec </span>jekyll s
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Or run the site on Docker with the following command:</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="gp">    --volume="$</span>PWD:/srv/jekyll<span class="s2">" </span><span class="se">\</span><span class="s2">
</span><span class="go">    -p 4000:4000 jekyll/jekyll \
    jekyll serve
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Open a browser and visit to <em><a href="http://localhost:4000">http://localhost:4000</a></em>.</p>

<h3 id="deployment">Deployment</h3>

<p>Before the deployment begins, checkout the file <code class="language-plaintext highlighter-rouge">_config.yml</code> and make sure the <code class="language-plaintext highlighter-rouge">url</code> is configured correctly. Furthermore, if you prefer the <a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites"><strong>project site</strong></a> and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than <strong>GitHub Pages</strong>, remember to change the <code class="language-plaintext highlighter-rouge">baseurl</code> to your project name that starting with a slash, e.g, <code class="language-plaintext highlighter-rouge">/project-name</code>.</p>

<p>Now you can choose ONE of the following methods to deploy your Jekyll site.</p>

<h4 id="deploy-on-github-pages">Deploy on GitHub Pages</h4>

<p>For security reasons, GitHub Pages build runs on <code class="language-plaintext highlighter-rouge">safe</code> mode, which restricts us from using plugins to generate additional page files. Therefore, we can use <strong>GitHub Actions</strong> to build the site, store the built site files on a new branch, and use that branch as the source of the GH Pages service.</p>

<p>Quickly check the files needed for GitHub Actions build:</p>

<ul>
  <li>Ensure your Jekyll site has the file <code class="language-plaintext highlighter-rouge">.github/workflows/pages-deploy.yml</code>. Otherwise, create a new one and fill in the contents of the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/blob/master/.github/workflows/pages-deploy.yml.hook">workflow file</a>, and the value of the <code class="language-plaintext highlighter-rouge">on.push.branches</code> should be the same as your repo’s default branch name.</li>
  <li>Ensure your Jekyll site has file <code class="language-plaintext highlighter-rouge">tools/test.sh</code> and <code class="language-plaintext highlighter-rouge">tools/deploy.sh</code>. Otherwise, copy them from this repo to your Jekyll site.</li>
</ul>

<p>And then rename your repository to <code class="language-plaintext highlighter-rouge">&amp;lt;GH-USERNAME&amp;gt;.github.io</code> on GitHub.</p>

<p>Now publish your Jekyll site by:</p>

<ol>
  <li>
    <p>Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named <code class="language-plaintext highlighter-rouge">gh-pages</code> will appear to store the built site files.</p>
  </li>
  <li>
    <p>Browse to your repo’s landing page on GitHub and select the branch <code class="language-plaintext highlighter-rouge">gh-pages</code> as the <a href="https://docs.github.com/en/github/working-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site">publishing source</a> through <em>Settings</em> → <em>Options</em> → <em>GitHub Pages</em>:</p>

    <p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190809/gh-pages-sources.png" alt="gh-pages-sources" /></p>
  </li>
  <li>
    <p>Visit your website at the address indicated by GitHub.</p>
  </li>
</ol>

<h4 id="deploy-on-other-platforms">Deploy on Other Platforms</h4>

<p>On platforms other than GitHub, we cannot enjoy the convenience of <strong>GitHub Actions</strong>. Therefore, we should build the site locally (or on some other 3rd-party CI platform) and then put the site files on the server.</p>

<p>Go to the root of the source project, build your site by:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span><span class="nv">JEKYLL_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>jekyll b
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Or build the site with Docker by:</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="go">    --env JEKYLL_ENV=production \
</span><span class="gp">    --volume="$</span>PWD:/srv/jekyll<span class="s2">" </span><span class="se">\</span><span class="s2">
</span><span class="go">    jekyll/jekyll \
    jekyll build
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Unless you specified the output path, the generated site files will be placed in folder <code class="language-plaintext highlighter-rouge">_site</code> of the project’s root directory. Now you should upload those files to your web server.</p>


    </content>
    <author>
      <name>Cotes Chung</name>
    </author>

  
    
    <category term="Blogging" />
    
    <category term="Tutorial" />
    
  

  
    <summary>
      





      Prerequisites

Follow the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll and Bundler.

Installation

There are two ways to get the theme:


  Install from RubyGems - Easy to update, isolate irrelevant project files so you can focus on writing.
  Fork on GitHub - Convenient for custom development, but difficult to update, only suitable for web developers.


Installing the The...
    </summary>
  

  </entry>

  
  <entry>
    <title>Writing a New Post</title>
    <link href="https://githin.xyz/posts/write-a-new-post/" rel="alternate" type="text/html" title="Writing a New Post" />
    <published>2019-08-08T06:10:00+00:00</published>
  
    <updated>2021-04-17T08:08:13+00:00</updated>
  
    <id>https://githin.xyz/posts/write-a-new-post/</id>
  
    <content type="html" xml:base="https://githin.xyz/posts/write-a-new-post/">
    
    <h2 id="naming-and-path">Naming and Path</h2>

<p>Create a new file named <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-TITLE.EXTENSION</code> and put it in the <code class="language-plaintext highlighter-rouge">_posts/</code> of the root directory. Please note that the <code class="language-plaintext highlighter-rouge">EXTENSION</code> must be one of <code class="language-plaintext highlighter-rouge">md</code> and <code class="language-plaintext highlighter-rouge">markdown</code>.</p>

<h2 id="front-matter">Front Matter</h2>

<p>Basically, you need to fill the <a href="https://jekyllrb.com/docs/front-matter/">Front Matter</a> as below at the top of the post:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">TITLE</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">YYYY-MM-DD HH:MM:SS +/-TTTT</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">TOP_CATEGORIE</span><span class="pi">,</span> <span class="nv">SUB_CATEGORIE</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">TAG</span><span class="pi">]</span>     <span class="c1"># TAG names should always be lowercase</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><strong>Note</strong>: The posts’ <strong><em>layout</em></strong> has been set to <code class="language-plaintext highlighter-rouge">post</code> by default, so there is no need to add the variable <strong><em>layout</em></strong> in Front Matter block.</p>
</blockquote>

<h3 id="timezone-of-date">Timezone of date</h3>

<p>In order to accurately record the release date of a post, you should not only setup the <code class="language-plaintext highlighter-rouge">timezone</code> of <code class="language-plaintext highlighter-rouge">_config.yml</code> but also provide the the post’s timezone in field <code class="language-plaintext highlighter-rouge">date</code> of its Front Matter block. Format: <code class="language-plaintext highlighter-rouge">+/-TTTT</code>, e.g. <code class="language-plaintext highlighter-rouge">+0800</code>.</p>

<h3 id="categories-and-tags">Categories and Tags</h3>

<p>The <code class="language-plaintext highlighter-rouge">categories</code> of each post is designed to contain up to two elements, and the number of elements in <code class="language-plaintext highlighter-rouge">tags</code> can be zero to infinity. For instance:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">Animal</span><span class="pi">,</span> <span class="nv">Insect</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">bee</span><span class="pi">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="table-of-contents">Table of Contents</h2>

<p>By default, the <strong>T</strong>able <strong>o</strong>f <strong>C</strong>ontents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to <code class="language-plaintext highlighter-rouge">_config.yml</code> and set the value of variable <code class="language-plaintext highlighter-rouge">toc</code> to <code class="language-plaintext highlighter-rouge">false</code>. If you want to turn off TOC for specific post, add the following to post’s <a href="https://jekyllrb.com/docs/front-matter/">Front Matter</a>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">toc</span><span class="pi">:</span> <span class="no">false</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="comments">Comments</h2>

<p>Similar to TOC, the <a href="https://disqus.com/">Disqus</a> comments is loaded by default in each post, and the global switch is defined by variable <code class="language-plaintext highlighter-rouge">comments</code> in file <code class="language-plaintext highlighter-rouge">_config.yml</code> . If you want to close the comment for specific post, add the following to the <strong>Front Matter</strong> of the post:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">comments</span><span class="pi">:</span> <span class="no">false</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="mathematics">Mathematics</h2>

<p>For website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">math</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="mermaid">Mermaid</h2>

<p><a href="https://github.com/mermaid-js/mermaid"><strong>Mermaid</strong></a> is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">mermaid</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Then you can use it like other markdown language: surround the graph code with <code class="language-plaintext highlighter-rouge">```mermaid</code> and <code class="language-plaintext highlighter-rouge">```</code>.</p>

<h2 id="images">Images</h2>

<h3 id="preview-image">Preview image</h3>

<p>If you want to add an image to the top of the post contents, specify the url and alt attribute for the image:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">image</span><span class="pi">:</span>
  <span class="na">src</span><span class="pi">:</span> <span class="s">/path/to/image/file</span>
  <span class="na">alt</span><span class="pi">:</span> <span class="s">image alternative text</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="image-caption">Image caption</h3>

<p>Add italics to the next line of an image，then it will become the caption and appear at the bottom of the image:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">img-description</span><span class="p">](</span><span class="sx">/path/to/image</span><span class="p">)</span>
<span class="ge">_Image Caption_</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="image-size">Image size</h3>

<p>You can specify the width (and height) of a image with <code class="language-plaintext highlighter-rouge">width</code>:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: width="400"}
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="image-position">Image position</h3>

<p>By default, the image is centered, but you can specify the position by using one of class <code class="language-plaintext highlighter-rouge">normal</code> , <code class="language-plaintext highlighter-rouge">left</code> and <code class="language-plaintext highlighter-rouge">right</code>. For example:</p>

<ul>
  <li>
    <p><strong>Normal position</strong></p>

    <p>Image will be left aligned in below sample:</p>

    <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .normal}
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Float to the left</strong></p>

    <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .left}
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Float to the right</strong></p>

    <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .right}
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<blockquote>
  <p><strong>Limitation</strong>: Once you specify the position of an image, it is forbidden to add the image caption.</p>
</blockquote>

<h3 id="image-shadow">Image shadow</h3>

<p>The screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the <code class="language-plaintext highlighter-rouge">light</code> mode:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .shadow}
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="cdn-url">CDN URL</h3>

<p>If you host the images on the CDN, you can save the time of repeatedly writing the CDN url by assigning the variable <code class="language-plaintext highlighter-rouge">img_cdn</code> of <code class="language-plaintext highlighter-rouge">_config.yml</code> file:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="na">img_cdn</span><span class="pi">:</span> <span class="s">https://cdn.com</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Once <code class="language-plaintext highlighter-rouge">img_cdn</code> is assigned, the CDN url will be added to the path of all images (images of site avatar and posts) starting with <code class="language-plaintext highlighter-rouge">/</code>.</p>

<p>For instance, when using images:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="p">![</span><span class="nv">The flower</span><span class="p">](</span><span class="sx">/path/to/flower.png</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The parsing result will automatically add the CDN prefix <code class="language-plaintext highlighter-rouge">https://cdn.com</code> before the image path:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nt">&amp;lt;img</span> <span class="na">src=</span><span class="s">"https://cdn.com/path/to/flower.png"</span> <span class="na">alt=</span><span class="s">"The flower"</span><span class="nt">&amp;gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="pinned-posts">Pinned Posts</h2>

<p>You can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">pin</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="code-block">Code Block</h2>

<p>Markdown symbols <code class="language-plaintext highlighter-rouge">```</code> can easily create a code block as following examples.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>This is a common code snippet, without syntax highlight and line number.
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="specific-language">Specific Language</h2>

<p>Using <code class="language-plaintext highlighter-rouge">```language</code> you will get code snippets with line numbers and syntax highlight.</p>

<blockquote>
  <p><strong>Note</strong>: The Jekyll style <code class="language-plaintext highlighter-rouge">{% highlight LANGUAGE %}</code> or <code class="language-plaintext highlighter-rouge">{% highlight LANGUAGE linenos %}</code> are not allowed to be used in this theme !</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="c1"># Yaml code snippet</span>
<span class="na">items</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">part_no</span><span class="pi">:</span>   <span class="s">A4786</span>
      <span class="na">descrip</span><span class="pi">:</span>   <span class="s">Water Bucket (Filled)</span>
      <span class="na">price</span><span class="pi">:</span>     <span class="m">1.47</span>
      <span class="na">quantity</span><span class="pi">:</span>  <span class="m">4</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="liquid-codes">Liquid Codes</h3>

<p>If you want to display the <strong>Liquid</strong> snippet, surround the liquid code with <code class="language-plaintext highlighter-rouge">{% raw %}</code> and <code class="language-plaintext highlighter-rouge">{% endraw %}</code> .</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">product</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'Pack'</span><span class="w"> </span><span class="p">%}</span>
  This product's title contains the word Pack.
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="learn-more">Learn More</h2>

<p>For more knowledge about Jekyll posts, visit the <a href="https://jekyllrb.com/docs/posts/">Jekyll Docs: Posts</a>.</p>


    </content>
    <author>
      <name>Cotes Chung</name>
    </author>

  
    
    <category term="Blogging" />
    
    <category term="Tutorial" />
    
  

  
    <summary>
      





      Naming and Path

Create a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts/ of the root directory. Please note that the EXTENSION must be one of md and markdown.

Front Matter

Basically, you need to fill the Front Matter as below at the top of the post:

---
title: TITLE
date: YYYY-MM-DD HH:MM:SS +/-TTTT
categories: [TOP_CATEGORIE, SUB_CATEGORIE]
tags: [TAG]     # TAG names s...
    </summary>
  

  </entry>

  
  <entry>
    <title>Text and Typography</title>
    <link href="https://githin.xyz/posts/text-and-typography/" rel="alternate" type="text/html" title="Text and Typography" />
    <published>2019-08-08T03:33:00+00:00</published>
  
    <updated>2021-05-28T16:30:25+00:00</updated>
  
    <id>https://githin.xyz/posts/text-and-typography/</id>
  
    <image>
      <url>https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/commons/devices-mockup.png</url>
      <title></title>
    </image>
  
    <content type="html" xml:base="https://githin.xyz/posts/text-and-typography/">
    
      <img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/commons/devices-mockup.png"/>
    
    <p>This post is to show Markdown syntax rendering on <a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork"><strong>Chirpy</strong></a>, you can also use it as an example of writing. Now, let’s start looking at text and typography.</p>

<h2 id="titles">Titles</h2>
<hr />
<h1 id="h1---heading">H1 - heading</h1>

<h2 data-toc-skip="">H2 - heading</h2>

<h3 data-toc-skip="">H3 - heading</h3>

<h4>H4 - heading</h4>
<hr />
<p><br /></p>

<h2 id="paragraph">Paragraph</h2>

<p>I wandered lonely as a cloud</p>

<p>That floats on high o’er vales and hills,</p>

<p>When all at once I saw a crowd,</p>

<p>A host, of golden daffodils;</p>

<p>Beside the lake, beneath the trees,</p>

<p>Fluttering and dancing in the breeze.</p>

<h2 id="lists">Lists</h2>

<h3 id="ordered-list">Ordered list</h3>

<ol>
  <li>Firstly</li>
  <li>Secondly</li>
  <li>Thirdly</li>
</ol>

<h3 id="unordered-list">Unordered list</h3>

<ul>
  <li>Chapter
    <ul>
      <li>Section
        <ul>
          <li>Paragraph</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="task-list">Task list</h3>

<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />TODO</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Completed</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Defeat COVID-19
    <ul class="task-list">
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Vaccine production</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Economic recovery</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />People smile again</li>
    </ul>
  </li>
</ul>

<h3 id="description-list">Description list</h3>

<dl>
  <dt>Sun</dt>
  <dd>the star around which the earth orbits</dd>
  <dt>Moon</dt>
  <dd>the natural satellite of the earth, visible by reflected light from the sun</dd>
</dl>

<h2 id="block-quote">Block Quote</h2>

<blockquote>
  <p>This line to shows the Block Quote.</p>
</blockquote>

<h2 id="tables">Tables</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Company</th>
      <th style="text-align: left">Contact</th>
      <th style="text-align: right">Country</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Alfreds Futterkiste</td>
      <td style="text-align: left">Maria Anders</td>
      <td style="text-align: right">Germany</td>
    </tr>
    <tr>
      <td style="text-align: left">Island Trading</td>
      <td style="text-align: left">Helen Bennett</td>
      <td style="text-align: right">UK</td>
    </tr>
    <tr>
      <td style="text-align: left">Magazzini Alimentari Riuniti</td>
      <td style="text-align: left">Giovanni Rovelli</td>
      <td style="text-align: right">Italy</td>
    </tr>
  </tbody>
</table>

<h2 id="links">Links</h2>

<p><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a></p>

<h2 id="footnote">Footnote</h2>

<p>Click the hook will locate the footnote<sup id="fnref:footnote" role="doc-noteref"><a href="#fn:footnote" class="footnote" rel="footnote">1</a></sup>, and here is another footnote<sup id="fnref:fn-nth-2" role="doc-noteref"><a href="#fn:fn-nth-2" class="footnote" rel="footnote">2</a></sup>.</p>

<h2 id="images">Images</h2>

<ul>
  <li>Default (with caption)</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190808/mockup.png" alt="Desktop View" />
<em>Full screen width and center alignment</em></p>

<p><br /></p>

<ul>
  <li>Specify width</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190808/mockup.png" alt="Desktop View" width="400" />
<em>400px image width</em></p>

<ul>
  <li>Shadow</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190808/window.png" alt="Shadow Avatar" class="shadow" width="90%" />
<em>shadow effect (visible in light mode)</em></p>

<p><br /></p>

<ul>
  <li>Left aligned</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190808/mockup.png" alt="Desktop View" width="350" class="normal" /></p>

<p><br /></p>

<ul>
  <li>
    <p>Float to left</p>

    <p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190808/mockup.png" alt="Desktop View" width="240" class="left" />
“A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”</p>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>Float to right</p>

    <p><img src="https://cdn.jsdelivr.net/gh/cotes2020/chirpy-images/posts/20190808/mockup.png" alt="Desktop View" width="240" class="right" />
“A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”</p>
  </li>
</ul>

<p><br /></p>

<h2 id="mermaid-svg">Mermaid SVG</h2>

<pre><code class="language-mermaid"> gantt
  title  Adding GANTT diagram functionality to mermaid
  apple :a, 2017-07-20, 1w
  banana :crit, b, 2017-07-23, 1d
  cherry :active, c, after b a, 1d
</code></pre>

<h2 id="mathematics">Mathematics</h2>

<p>The mathematics powered by <a href="https://www.mathjax.org/"><strong>MathJax</strong></a>:</p>

\[\sum_{n=1}^\infty 1/n^2 = \frac{\pi^2}{6}\]

<p>When $a \ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are</p>

\[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\]

<h2 id="inline-code">Inline code</h2>

<p>This is an example of <code class="language-plaintext highlighter-rouge">Inline Code</code>.</p>

<h2 id="code-block">Code block</h2>

<h3 id="common">Common</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>This is a common code snippet, without syntax highlight and line number.
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="specific-languages">Specific Languages</h3>

<h4 id="console">Console</h4>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span><span class="nb">env</span> |grep SHELL
<span class="go">SHELL=/usr/local/bin/bash
PYENV_SHELL=bash
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="ruby">Ruby</h4>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">sum_eq_n?</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
  <span class="k">return</span> <span class="kp">true</span> <span class="k">if</span> <span class="n">arr</span><span class="p">.</span><span class="nf">empty?</span> <span class="o">&amp;amp;&amp;amp;</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
  <span class="n">arr</span><span class="p">.</span><span class="nf">product</span><span class="p">(</span><span class="n">arr</span><span class="p">).</span><span class="nf">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span> <span class="p">}.</span><span class="nf">any?</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">==</span> <span class="n">n</span> <span class="p">}</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="shell">Shell</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"The command was not successful."</span><span class="p">;</span>
    <span class="c">#do the needful / exit</span>
<span class="k">fi</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="liquid">Liquid</h4>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">product</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'Pack'</span><span class="w"> </span><span class="p">%}</span>
  This product's title contains the word Pack.
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="java">Java</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">writeObject</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">io</span><span class="o">.</span><span class="na">ObjectOutputStream</span> <span class="n">s</span><span class="o">)</span>
  <span class="kd">throws</span> <span class="n">java</span><span class="o">.</span><span class="na">io</span><span class="o">.</span><span class="na">IOException</span> <span class="o">{</span>
  <span class="c1">// Write out any hidden serialization magic</span>
  <span class="n">s</span><span class="o">.</span><span class="na">defaultWriteObject</span><span class="o">();</span>
  <span class="k">for</span> <span class="o">(</span><span class="no">E</span> <span class="nl">e:</span> <span class="n">map</span><span class="o">.</span><span class="na">keySet</span><span class="o">())</span> <span class="n">s</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="reverse-footnote">Reverse Footnote</h2>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:footnote" role="doc-endnote">
      <p>The footnote source <a href="#fnref:footnote" class="reversefootnote" role="doc-backlink">&amp;#8617;</a></p>
    </li>
    <li id="fn:fn-nth-2" role="doc-endnote">
      <p>The 2nd footnote source <a href="#fnref:fn-nth-2" class="reversefootnote" role="doc-backlink">&amp;#8617;</a></p>
    </li>
  </ol>
</div>

    </content>
    <author>
      <name>Cotes Chung</name>
    </author>

  
    
    <category term="Blogging" />
    
    <category term="Demo" />
    
  

  
    <summary>
      





      This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.

Titles

H1 - heading

H2 - heading

H3 - heading

H4 - heading



Paragraph

I wandered lonely as a cloud

That floats on high o’er vales and hills,

When all at once I saw a crowd,

A host, of golden daffodils;

Beside the lake, beneath the t...
    </summary>
  

  </entry>

</feed>


